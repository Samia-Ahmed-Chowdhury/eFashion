/* toggle in label designing */

.switchBtns {
    border-radius: 33px 33px 0px 0px;
    background: #F9ECED;
    color: #333;
    text-align: center;
    font-size: 18px;
    font-style: normal;
    font-weight: 700;
    line-height: 21.6px;
    /* width: 300px;
    height: 62px;
    padding:  0 5px; */
    /* gap: 2rem; */
    position: relative;
    height: 50px;
    display: inline-flex;
    justify-content: space-around;
}

.switchBtns label {
    z-index: 1;
}

.switchBtns .lable-switch-btn1 {
    padding: 20px 37px;
}

.switchBtns .lable-switch-btn2 {
    padding: 20px 18px;
}

.switchBtns::before {
    content: '';
    position: absolute;
    left: 0;
    width: 50%;
    height: 100%;
    transition: .5s left ease;
    border-radius: 33px 33px 0px 0px;
    background: #FFC2C5;

}

.switchBtns:has(#switch-btn1:checked)::before {
    left: 0%;
}

.switchBtns:has(#switch-btn2:checked)::before {
    left: 49%;
}

.switchBtns input {
    display: none;
    cursor: pointer;
}

label {
    cursor: pointer;
}

.feature_img {
    width: 215px;
    height: 157px;
    flex-shrink: 0;
}

.circles {
    /* height: 90vmin; */
    position: relative;
    /* width: 90vmin; */
    overflow: hidden;
}
.circle1,  .circle2,  .circle3 {
    animation: growAndFade 3s infinite ease-out;
    background-color: rgba(242, 87, 93, .5);
    border-radius: 50%;
    height: 100%;
    opacity: 0;
    left: 0;
    position: absolute;
    width: 100%;
  }
  
  .circle1 {
    animation-delay: 1s;    
  }
  .circle2 {
    animation-delay: 2s; 
  }
  .circle3 {
    animation-delay: 3s;
  }


@keyframes growAndFade {
  0% {
    opacity: .25;
    transform: scale(0);
  }
  100% {
    opacity: 0;
    transform: scale(1);
  }
}
/* //arousel.Item */
.bghjHX{
margin: 0 0 ;
}

/* @media screen and (max-width: 767px){
.enBXZH {
    grid-template-columns: repeat(3,1fr) !important;
    grid-template-rows: repeat(2,.1fr) !important;
}
.fbRhFB {
    padding-left: 0px !important;
    /* grid-template-columns: 0px !important;
     grid-column-gap: 0px !important; 
}
} */